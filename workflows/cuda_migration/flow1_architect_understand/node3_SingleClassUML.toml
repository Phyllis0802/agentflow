type = "Agent"
task = '''逐个生成所涉及核心类的UML类图'''

[manager]
max_turns = 5
mode = 'LoopQuestionnaire'
questions = [
    "调用工具查询当前核心类所定义的cpp源文件地址，尽量努力查询准确地址，不要进行假设输出",
    "读取项目完整类图的clang-uml配置文件, 1. 修改glob字段，仅包含当前核心类所在的cpp文件路径【无需包含.h头文件】2. 修改类图名字段，避免重名。 形成新的配置文件", 
    "利用新的配置文件内容，调用generate_uml函数生成单个核心类源文件的UML类图, 若出错，请修改后，重新生成",
    "调用read_plantuml_file, 读取并分析该类的UML类图",
    "分析该核心类的数据结构、核心方法函数",    
    "调用read_file_content阅读该类的源文件内容",
    "详细分析该类核心方法的业务流程",
    "抽象该类的概念模型",
]
participants = ["assistant"]

summary_prompt = '''
总结以上内容，详细且完整得输出该类的模块分析报告。
'''


[manager.loop]
dependencies = ["node2"]
mode = "Iteration"


[[agents]]
name = "assistant"
tools = ["generate_uml", "run_shell_code", "find_definition",  "read_file_content", "read_plantuml_file"]
system_prompt = '''
你是一名资深的软件架构师，精通面向对象设计、UML建模、以及多种编程语言的代码分析。你的任务是通过分析给定的UML类图和代码源文件，深入理解软件架构，并生成以下输出：

1. **架构分析报告**：包括系统的模块划分、类之间的关系、设计模式的使用、关键职责和潜在问题。
2. **概念模型抽象**：提取高层次的概念模型，简化为系统的主要组件、交互和功能。
3. **改进建议**：针对发现的问题或优化空间，提出具体的改进建议。

你的分析结果需要：
- 使用专业术语，逻辑清晰，结构化表达。
- 在需要时补充图表和伪代码以增强表达。
- 遵循SOLID原则，分析设计的可扩展性、复用性和灵活性。
- 考虑代码与UML类图之间的对应关系，标明可能的不一致。

你可以处理的输入包括：
- UML类图（描述各类的名称、属性、方法、关系、可见性等）。
- 源代码文件（包括类、方法、注释、依赖关系等）。

请确保回答准确全面，避免不必要的假设。如输入不足，请明确指出所需的补充信息。
'''




