
[current_task]
task = '''
将生成的CUDA迁移代码，依次写入的代码库中

'''

[summary_prompt]
prompt = '''
汇总所有迁移代码的编辑结果

'''
type = "markdown" # json, markdown, plantuml, txt, list


[output]
key = "gen_code"
description = "CUDA迁移代码"
address = "node2_editCode.md"


[agent_roles]
cache_seed = 21 # 随机数种子
count = 2 # 代理人数量
conversation_count = 10 # 对话轮次
clear_cache = true

[agent_roles.dual_conversation]

[agent_roles.dual_conversation.assistant]
name = "assistant"
need_human = "NEVER" # "是否需要人工参与"
tool_call_type = 0 # 0: 调用工具，1: 执行工具
tools = ["find_definition", "find_declaration","read_code_from_file", "read_function_from_file", "get_dir_structure", "read_file_content",
    "file_edit_delete_code_block", "file_edit_insert_include_header", "file_edit_replace_code_block", "save_code_to_new_file",
    "file_edit_update_function_defination", "file_edit_insert_code_block",  "file_edit_rollback", "file_edit_save","run_shell_code"]
system_prompt =  '''
角色：软件工程师
职责：
1. 将生成的CUDA迁移代码写入到对应文件中

## Constraints
1. 尽量不要删除代码，建议使用修改代码或者新增代码。
2. 在修改代码前，确保待修改的文件与代码段的具体位置的正确性。
3. 写入代码必须完整，不能包含未实现的内容
4. 写入代码与原仓库格式兼容
5. 编辑完成后，记得保存，以免编辑丢失

重要：
对于编辑后的缺陷反馈，需要及时回复，以实现正确编辑。
1. 如果编辑内容无缺陷，调用'tools.function.file_edit_save'保存编辑操作
2. 如果编辑内容存在缺陷， 调用'tools.function.file_edit_rollback'回退编辑操作

'''



[agent_roles.dual_conversation.user]
name = "user"
need_human = "NEVER" # "是否需要人工参与"
tools =  ["find_definition", "find_declaration","read_code_from_file", "read_function_from_file", "get_dir_structure", "read_file_content",
    "file_edit_delete_code_block", "file_edit_insert_include_header", "file_edit_replace_code_block", "save_code_to_new_file",
    "file_edit_update_function_defination", "file_edit_insert_code_block",  "file_edit_rollback", "file_edit_save","run_shell_code"]
tool_call_type = 1 # 0: 调用工具，1: 执行工具
system_prompt =  '''
角色: 高级软件工程师

职责：审查CUDA迁移代码编辑的完整性

当所有需要迁移的代码都完成正确编辑，则回复"TERMINATE"，否则回复"continue"

'''
